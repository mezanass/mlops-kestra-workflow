id: insert_data_from_s3_to_pgsql
namespace: dev2
tasks:
  - id: get_merge_data_from_s3 
    type: io.kestra.plugin.scripts.python.Commands
    namespaceFiles:
      enabled: true
    env:
      AWS_ACCESS_KEY_ID: "{{kv('AWS_ACCESS_KEY_ID')}}"
      AWS_SECRET_ACCESS_KEY: "{{kv('AWS_SECRET_ACCESS_KEY')}}"
    containerImage: civisanalytics/datascience-python:latest
    beforeCommands:
      - pip install -r requirements.txt
    commands:
      - python src/download_files_from_s3.py
      - python src/merge_data.py
    outputFiles:
      - "data/merged/*.csv"


   # Step 2: Create PostgreSQL table if not exists
  - id: create_pgsql_table
    type: io.kestra.plugin.jdbc.postgresql.Query
    url: jdbc:postgresql://detect-data-drift-pipeline-postgres-1:5432/
    username: "kestra"
    password: "k3str4"
    sql: |
      CREATE TABLE IF NOT EXISTS reference_data (
          col_0 double precision,
          col_1 double precision,
          col_2 double precision,
          col_3 double precision,
          col_4 double precision,
          quality bigint
      );

      CREATE TABLE IF NOT EXISTS current_data (
          col_0 double precision,
          col_1 double precision,
          col_2 double precision,
          col_3 double precision,
          col_4 double precision,
          quality bigint
      );

  - id: saveToCurrentTable
    type: io.kestra.plugin.jdbc.postgresql.CopyIn
    url: jdbc:postgresql://detect-data-drift-pipeline-postgres-1:5432/kestra
    username: kestra
    password: k3str4
    table: reference_data
    format: CSV
    delimiter: ","
    header: true
    from: "{{outputs.get_merge_data_from_s3.outputFiles['data/merged/merged.csv']}}"